# ENUMS
scalar DateTime

enum Category {
  LOVE
  STUDY
  MONEY
  HEALTH
}

enum Rarity {
  COMMON
  RARE
}

enum Major {
  COMPUTER
  CEDT
  CHEMICAL
  MECHANICAL
  ELECTRICAL
  PETROLEUM
  CIVIL
  INDUSTRIAL
  SURVEY
  ENVIRONMENTAL
  NUCLEAR
  ADME
  NANO
  ICE
  AERO
  AI
}

# TYPES

type Charm {
  id: String!
  name: String!
  category: Category!
  imageUrl: String
  major: Major
  quote: String
  variant: String
  rarity: Rarity!
  totalQuantity: Int!
  availableQuantity: Int!
}

type Inventory {
  id: String!
  userId: String!
  charmId: String!
  acquiredAt: String!
  expiresAt: String
}

type RandomizedResult {
  charm: Charm!
  inventory: Inventory!
}

type User {
  id:       String!
  email:     String!
  name:      String
  profileImage: String
  lastRandomized: DateTime
  googleId: String!
  studentId: String 
  year:      Int
  faculty:   String
  major:     Major
}

type AuthMessage {
  success: Boolean
  message: String!
  user: User
}
type EditMessage{
  success: Boolean!
  message: String!
}
# QUERIES
type Query {
  getUserInventory(userId: String!): [Inventory!]!
  hello: String!
  verify(token: String!): AuthMessage!
} 

type registerUserMessage{
  success: Boolean!
}
# MUTATIONS
type Mutation {
  randomizeCharm(userId: String!): RandomizeResponse!
  addCharmtoInventory(userId: String!,charmId: String!, source: String!): Inventory
  registerUser(id:String!,email:String!,name:String,picture:String): registerUserMessage!
  removeExpiredCharms: String!
  editUser(uid: String!,faculty:String,major:String,name:String,profileImage:String,studentId:String,year:Int): EditMessage!
}

# RESPONSE TYPES
type RandomizeResponse {
  message: String!
  results: [RandomizedResult!]!
}

type Query {
  getMarketplaceCharms: [Charm!]!  
  searchCharms(name: String!): [Charm!]!  
  filterCharms(categories: [Category], majors: [Major], rarities: [Rarity],charmId:String): [Charm!]!
}